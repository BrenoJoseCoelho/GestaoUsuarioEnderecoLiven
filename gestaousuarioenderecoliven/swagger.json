{
  "openapi": "3.1.0",
  "info": {
    "title": "Liven API",
    "description": "Documentation for Liven API",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AddressDto": {
        "type": "object",
        "properties": {
          "street": { "type": "string" },
          "city": { "type": "string" },
          "state": { "type": "string" },
          "zipcode": { "type": "string" },
          "country": { "type": "string" },
          "userId": { "type": "integer" }
        },
        "example": {
          "street": "123 Main St",
          "city": "Springfield",
          "state": "IL",
          "zipcode": "62704",
          "country": "USA",
          "userId": 1
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "street": { "type": "string" },
          "city": { "type": "string" },
          "state": { "type": "string" },
          "zipcode": { "type": "string" },
          "country": { "type": "string" },
          "user": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/user/login": {
      "post": {
        "description": "Rota para autenticação de usuários",
        "summary": "Autenticação de Usuário",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "example": {
                  "email": "user@example.com",
                  "password": "password123"
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/user/register": {
      "post": {
        "description": "Rota para registrar um novo usuário",
        "summary": "Registro de Usuário",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "example": {
                  "name": "John Doe",
                  "email": "john@example.com",
                  "password": "password123"
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" }
        }
      }
    },
    "/user": {
      "get": {
        "description": "Rota para recuperar todos os usuários",
        "summary": "Recuperar Todos os Usuários",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "OK" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "description": "Rota para recuperar um usuário pelo ID",
        "summary": "Recuperar Usuário por ID",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "User not found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "put": {
        "description": "Rota para atualizar um usuário pelo ID",
        "summary": "Atualizar Usuário por ID",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "example": {
                  "name": "John Doe",
                  "email": "john@example.com",
                  "password": "newpassword123"
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "User not found" },
          "400": { "description": "Bad Request" }
        }
      },
      "delete": {
        "description": "Rota para remover um usuário pelo ID",
        "summary": "Remover Usuário por ID",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "User not found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/address/user/{userId}/address": {
      "post": {
        "description": "Rota para adicionar um novo endereço para um usuário",
        "summary": "Adicionar Endereço de Usuário",
        "tags": ["Address"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddressDto" }
            }
          }
        },
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Bad Request" }
        }
      }
    },
    "/address/user/{userId}/addresses": {
      "get": {
        "description": "Rota para recuperar todos os endereços de um usuário",
        "summary": "Recuperar Endereços de Usuário",
        "tags": ["Address"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of addresses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Address" }
                }
              }
            }
          },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/address/{id}": {
      "get": {
        "description": "Rota para recuperar um endereço pelo ID",
        "summary": "Recuperar Endereço por ID",
        "tags": ["Address"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Address" } } } },
          "404": { "description": "Address not found" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "put": {
        "description": "Rota para atualizar um endereço pelo ID",
        "summary": "Atualizar Endereço por ID",
        "tags": ["Address"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddressDto" }
            }
          }
        },
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Address not found" },
          "400": { "description": "Bad Request" }
        }
      },
      "delete": {
        "description": "Rota para remover um endereço pelo ID",
        "summary": "Remover Endereço por ID",
        "tags": ["Address"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Address not found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/address/user/address": {
      "get": {
        "description": "Rota para recuperar endereços por país",
        "summary": "Recuperar Endereços por País",
        "tags": ["Address"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of addresses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Address" }
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    }
  }
}
